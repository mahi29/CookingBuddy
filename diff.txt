diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index d23e0a1..76cc6a6 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -17,15 +17,17 @@
         <activity
             android:name="group.cs169.cookingbuddy.MainActivity"
             android:label="@string/app_name" >
-            <meta-data
-                android:name="android.app.default_searchable"
-                android:value=".SearchResultActivity" />
+        </activity>
+        
+        <!-- Splash Activity -->
+        <activity
+            android:name="group.cs169.cookingbuddy.SplashActivity"
+            android:label="@string/app_name" >
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
                 <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-        </activity>
-        
+            </intent-filter>            
+        </activity>          
         <!-- Home Activity -->
         <activity
             android:name="group.cs169.cookingbuddy.HomeActivity"
@@ -53,6 +55,12 @@
                 android:value=".SearchResultActivity" />            
         </activity>
         
+        <!-- Add Ingredient Activity -->
+        <activity
+            android:name="group.cs169.cookingbuddy.AddIngredientActivity"
+            android:label="@string/app_name" >
+        </activity>        
+        
         <!-- Sign Up Activity -->
         <activity
             android:name="group.cs169.cookingbuddy.SignUpActivity"
@@ -64,6 +72,9 @@
         <activity
             android:name="group.cs169.cookingbuddy.AccountActivity"
             android:label="@string/app_name" >
+            <meta-data
+                android:name="android.app.default_searchable"
+                android:value=".SearchResultActivity" />
         </activity>   
 
         <!-- Recipe Instruction Activity -->
diff --git a/res/layout/ingredient_prompt.xml b/res/layout/ingredient_prompt.xml
index 640581f..87e27ef 100644
--- a/res/layout/ingredient_prompt.xml
+++ b/res/layout/ingredient_prompt.xml
@@ -3,54 +3,114 @@
     android:id="@+id/layout_root"
     android:layout_width="fill_parent"
     android:layout_height="fill_parent"
+    android:background="@color/background"
     android:orientation="vertical"
     android:padding="10dp" >
 
-    <TextView
-        android:id="@+id/prompt_message"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="Add your Ingredient: "
-        android:textAppearance="?android:attr/textAppearanceMedium" />
+    <ImageView
+        android:id="@+id/imgView1"
+        android:layout_width="fill_parent"
+        android:layout_height="0dp"
+        android:alpha="0"
+        android:layout_weight="2" />
 
     <LinearLayout
         android:layout_width="fill_parent"
         android:layout_height="0dp"
-        android:layout_weight="1"
-        android:orientation="horizontal" >
+        android:layout_weight="4"
+        android:background="#fff"
+        android:padding="5dp"
+        android:orientation="vertical" >
+        
+        <TextView
+	        android:id="@+id/prompt_message"
+	        android:layout_width="wrap_content"
+	        android:layout_height="0dp"
+	        android:layout_weight="1"
+	        android:text="Add your Ingredient"
+	        android:layout_gravity="center"
+	        android:textAllCaps="true"
+	        android:textAppearance="?android:attr/textAppearanceMedium" />
 
         <EditText
             android:id="@+id/prompt_name"
-            android:layout_width="0dp"
-            android:layout_weight="2"
-            android:layout_height="wrap_content"
-            android:hint="Name" >
+            android:layout_width="wrap_content"
+	        android:layout_height="0dp"
+	        android:layout_weight="1"    
+	        android:gravity="center"
+	        android:layout_gravity="center"
+            android:hint="Ingredient Name" >
             <requestFocus />
         </EditText>
-        
-        <Spinner
-            android:id="@+id/prompt_amt"
-            android:layout_width="48dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="0.16"
-            android:entries="@array/ingredient_arrays"
-            android:prompt="@string/ingredient_prompt" />
-        
-        <EditText
-            android:id="@+id/prompt_unit"
-            android:layout_width="0dp"
-            android:layout_weight="1"            
-            android:layout_height="wrap_content"
-            android:hint="Unit" >
-        </EditText>
+	    <LinearLayout
+	        android:layout_width="fill_parent"
+	        android:layout_height="0dp"
+	        android:layout_weight="1"
+	        android:padding="5dp"
+	        android:orientation="horizontal" >  
+	        
+	        <EditText
+	            android:id="@+id/prompt_amt"
+	            android:layout_width="0dp"
+	            android:layout_height="fill_parent"	            
+	            android:layout_weight="1"
+	            android:gravity="center"
+	            android:inputType="numberDecimal"    
+	            android:hint="Quantity" >
+			</EditText>	 	            	        
+	        <Spinner
+	            android:id="@+id/prompt_unit"
+	            android:layout_width="0dp"
+	            android:layout_height="fill_parent"
+	            android:layout_weight="1"
+	            android:gravity="center"
+	            android:layout_gravity="center"
+	            android:entries="@array/ingredient_arrays"
+	            android:prompt="@string/ingredient_prompt" />        
+	   </LinearLayout>      
+
+        <TextView
+	        android:id="@+id/prompt_expirationDate"
+	        android:layout_width="wrap_content"
+	        android:layout_height="0dp"
+	        android:layout_weight="1"	        
+	        android:text="Click here to set expiration date"
+	        android:layout_gravity="center"
+	        android:gravity="center"
+	        android:clickable="true"
+	        android:onClick="setExpiration"
+	        android:textAllCaps="true"
+	        android:textAppearance="?android:attr/textAppearanceSmall" />  
+	    <LinearLayout
+	        android:layout_width="fill_parent"
+	        android:layout_height="0dp"
+	        android:layout_weight="1.1"
+	        android:gravity="bottom"
+	        android:padding="5dp"
+	        android:orientation="horizontal" >  
+			<Button
+			    android:id="@+id/prompt_cancel"
+			    android:layout_width="0dp"
+			    android:layout_weight="1"
+			    android:layout_height="wrap_content"      
+			    android:text="Cancel"
+			    android:clickable="true"
+			    android:onClick="cancelAddition" />
+			<Button
+			    android:id="@+id/prompt_finish"
+			    android:layout_width="0dp"
+			    android:layout_weight="1"
+			    android:layout_height="wrap_content"      
+			    android:text="Finish"
+			    android:onClick="finishAddition" />
+	   </LinearLayout>   	              
     </LinearLayout>
 
-    <EditText
-        android:id="@+id/prompt_exp"
+   <ImageView
+        android:id="@+id/imgView2"
         android:layout_width="fill_parent"
         android:layout_height="0dp"
-        android:layout_weight="1"
-        android:hint="Expiration Date" >
-    </EditText>
+        android:alpha="0"
+        android:layout_weight="4" />
 
 </LinearLayout>
\ No newline at end of file
diff --git a/res/values/strings.xml b/res/values/strings.xml
index ba59310..7ff97a2 100644
--- a/res/values/strings.xml
+++ b/res/values/strings.xml
@@ -11,28 +11,18 @@
     <string name="action_update">Update</string>
     <string name="action_delete">Delete</string>
     <string name="action_selectAll">Select All</string>
-    <string name="ingredient_prompt">Choose a count</string>
+    <string name="ingredient_prompt">Choose a unit</string>
     <string name="sort_prompt">Sort By</string>
  
     <string-array name="ingredient_arrays">
-        <item>1</item>
-        <item>2</item>
-        <item>3</item>
-        <item>4</item>
-        <item>5</item>
-        <item>6</item>
-        <item>7</item>
-        <item>8</item>
-        <item>9</item>
-        <item>10</item>
-        <item>11</item>
-        <item>12</item>
-        <item>13</item>
-        <item>14</item>
-        <item>15</item>
-        <item>16</item>
-        <item>17</item>
-        <item>18</item>
+        <item>Count</item>
+        <item>Cups</item>
+        <item>Grams</item>
+        <item>Gallons</item>
+        <item>Ounces</item>
+        <item>Quarts</item>
+        <item>Teaspoons</item>
+        <item>Tablespoons</item>
     </string-array>
     
  
diff --git a/src/group/cs169/cookingbuddy/BaseActivity.java b/src/group/cs169/cookingbuddy/BaseActivity.java
index bbe43fa..430b6ce 100644
--- a/src/group/cs169/cookingbuddy/BaseActivity.java
+++ b/src/group/cs169/cookingbuddy/BaseActivity.java
@@ -7,6 +7,7 @@ import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
+import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
 import android.widget.SearchView;
@@ -35,7 +36,6 @@ public class BaseActivity extends Activity {
         	onSearchRequested();
             return true;
         case android.R.id.home:
-        	getActionBar().setHomeButtonEnabled(true);
         	Intent intent = new Intent(this, HomeActivity.class);
             intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
             startActivity(intent);
@@ -74,10 +74,29 @@ public class BaseActivity extends Activity {
 	/**Called when 'Log Out' button is clicked*/
 	public void logout(Context ctx) {
 		SharedPreferences prefs = this.getSharedPreferences(Constants.SHARED_PREFS_USERNAME, Context.MODE_PRIVATE);
-		prefs.edit().remove(Constants.JSON_USERNAME).commit();
+		SharedPreferences.Editor editor = prefs.edit();
+		editor.remove(Constants.JSON_USERNAME);
+		editor.remove("TEST");
+		editor.commit();
+		Log.d("BaseActivity","Logout Called");
 		Intent intent = new Intent(ctx, MainActivity.class);
 		intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
 		ctx.startActivity(intent);
 	}
-
+	
+	@Override
+	protected void onPause() {
+		super.onPause();
+		Log.d("BaseActivity","onPause()");
+//		SharedPreferences prefs = getSharedPreferences(Constants.SHARED_PREFS_USERNAME, Context.MODE_PRIVATE);
+//		prefs.edit().putString("TEST","Mahith is amazing").commit();
+	}
+	
+	@Override
+	protected void onDestroy() {
+		super.onDestroy();
+//		Log.d("BaseActivity","onDestroy()");
+//		SharedPreferences prefs = getSharedPreferences(Constants.SHARED_PREFS_USERNAME, Context.MODE_PRIVATE);
+//		prefs.edit().putString("TEST","Mahith is amazing").commit();
+	}
 }
diff --git a/src/group/cs169/cookingbuddy/Constants.java b/src/group/cs169/cookingbuddy/Constants.java
index 0b757e3..637c992 100644
--- a/src/group/cs169/cookingbuddy/Constants.java
+++ b/src/group/cs169/cookingbuddy/Constants.java
@@ -20,17 +20,22 @@ public class Constants {
 	public static final String CHANGE_PASSWORD = "/users/changePassword";
 	public static final String REMOVE_ALL = "/ingredients/removeAll";
 	public static final String RECIPE_DATA = "/recipes/getRecipeData";
+	public static final String VERIFY_URL =  "/users/verify";
 	
-	//Standard codes
+	//Standard codes		
 	public static final String JSON_USERNAME = "user";
 	public static final String JSON_PASSWORD = "password";
 	public static final String JSON_NEW_PASSWORD = "newPassword";
 	public static final String JSON_STANDARD_RESPONSE = "errCode";
+	public static final String JSON_COOKIE = "cookie";
 	public static final String SUCCESS = "SUCCESS";
 	public static final int DEFAULT_RATING = 3;
 	public static final int DEFAULT_PICTURE = R.drawable.stockimage;
 	public static final String ERROR_CODE = "-100";
 	public static final String SHARED_PREFS_USERNAME = "sharedPrefs";
+	public static final String COOKIE_PREFS = "cookiesPref";
+	public static final String SIGNED_IN = "SIGNED_IN";
+	public static final String NOT_SIGNED_IN = "NOT_SIGNED_IN";
 	
 	//Ingredient List
 	public static final String INGREDIENT_KEY = "items"; 
diff --git a/src/group/cs169/cookingbuddy/HTTPTask.java b/src/group/cs169/cookingbuddy/HTTPTask.java
index 2cd24ba..1e60079 100644
--- a/src/group/cs169/cookingbuddy/HTTPTask.java
+++ b/src/group/cs169/cookingbuddy/HTTPTask.java
@@ -8,10 +8,14 @@ import java.io.OutputStream;
 import java.net.HttpURLConnection;
 import java.net.URL;
 import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
 
 import org.json.JSONObject;
 
 import android.app.ProgressDialog;
+import android.content.Context;
+import android.content.SharedPreferences;
 import android.os.AsyncTask;
 import android.util.Log;
 
@@ -22,6 +26,7 @@ public class HTTPTask extends AsyncTask<ArrayList<Object>, Void, String> {
 	public String method;
 	public ProgressDialog dialog;
 	public String callingActivity;
+	public Context context;
 	
 	@Override
 	protected String doInBackground(ArrayList<Object>... container) {
@@ -45,16 +50,28 @@ public class HTTPTask extends AsyncTask<ArrayList<Object>, Void, String> {
 			urlConn.setUseCaches (false);
 			urlConn.setRequestMethod("POST");
 			urlConn.setChunkedStreamingMode(0);
-			urlConn.setRequestProperty("Content-Type","application/json");   
+			urlConn.setRequestProperty("Content-Type","application/json");  
+			if (path.equals(Constants.VERIFY_URL)) {
+				urlConn.setRequestProperty("Accept", "application/json");
+				SharedPreferences prefs = context.getSharedPreferences(Constants.SHARED_PREFS_USERNAME, Context.MODE_PRIVATE);
+				String cookie = prefs.getString(Constants.COOKIE_PREFS, "defCookie");
+				Log.d("HTTPTask",cookie);
+				urlConn.setRequestProperty("Cookie",cookie);
+			}
 			urlConn.connect();  
-			
 			//Send the POST request to the back-end
 			byte[] outputBytes = param.toString().getBytes("UTF-8");
 			OutputStream os = urlConn.getOutputStream();
 			os.write(outputBytes);
 			os.flush();
 			os.close();
-			
+			if (path.equals(Constants.LOGIN_USER_URL) || path.equals(Constants.ADD_USER_URL)) {
+				context = (Context) caller;
+				String cookie = urlConn.getHeaderField("Set-Cookie");
+				Log.d("HTTPTask",cookie);
+				SharedPreferences prefs = context.getSharedPreferences(Constants.SHARED_PREFS_USERNAME, Context.MODE_PRIVATE);
+				prefs.edit().putString(Constants.COOKIE_PREFS, cookie).commit();
+			}
 			//Read the incoming JSON from the back-end
 			StringBuilder builder = new StringBuilder();
 			InputStream is = urlConn.getInputStream();
@@ -70,7 +87,6 @@ public class HTTPTask extends AsyncTask<ArrayList<Object>, Void, String> {
 		}  finally {
 			if(urlConn !=null)  urlConn.disconnect(); 
 		}
-		
 		return result;	
 	}
 
diff --git a/src/group/cs169/cookingbuddy/HistoryActivity.java b/src/group/cs169/cookingbuddy/HistoryActivity.java
index d09d42d..bafc309 100644
--- a/src/group/cs169/cookingbuddy/HistoryActivity.java
+++ b/src/group/cs169/cookingbuddy/HistoryActivity.java
@@ -9,10 +9,8 @@ import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import android.app.ActionBar;
 import android.content.SharedPreferences;
 import android.os.Bundle;
-import android.util.Log;
 import android.widget.ListView;
 
 public class HistoryActivity extends BaseActivity implements AsyncResponse {
@@ -24,7 +22,7 @@ public class HistoryActivity extends BaseActivity implements AsyncResponse {
 	ListView listview;
 	HistoryAdapter adapter;
 	
-	@SuppressWarnings({ "unchecked", "unchecked" })
+	@SuppressWarnings({ "unchecked" })
 	@Override
 	protected void onCreate(Bundle savedInstanceState) {
 		
@@ -80,9 +78,6 @@ public class HistoryActivity extends BaseActivity implements AsyncResponse {
 			e.printStackTrace();
 		}
 		
-		Log.d("Size of Recipe List", "There are " + strings.size() + " recipes");
-		Log.d("Size of Ratings List", "There are " + ratings.size() + " ratings");
-		
 		//int arrayListLength = strings.size();
 		//String stringArray[] = new String[arrayListLength];
 		
diff --git a/src/group/cs169/cookingbuddy/HistoryAdapter.java b/src/group/cs169/cookingbuddy/HistoryAdapter.java
index 6bf6a30..6d4e38a 100644
--- a/src/group/cs169/cookingbuddy/HistoryAdapter.java
+++ b/src/group/cs169/cookingbuddy/HistoryAdapter.java
@@ -3,7 +3,6 @@ package group.cs169.cookingbuddy;
 import java.util.ArrayList;
 
 import android.content.Context;
-import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
diff --git a/src/group/cs169/cookingbuddy/HomeActivity.java b/src/group/cs169/cookingbuddy/HomeActivity.java
index 1410129..8c0532c 100644
--- a/src/group/cs169/cookingbuddy/HomeActivity.java
+++ b/src/group/cs169/cookingbuddy/HomeActivity.java
@@ -6,7 +6,6 @@ import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
-import android.util.Log;
 import android.view.View;
 import android.widget.TextView;
 
@@ -19,7 +18,6 @@ public class HomeActivity extends BaseActivity{
 	protected void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
 		setContentView(R.layout.activity_home);
-		Log.d("HomeActivity","onCreate");
 		SharedPreferences prefs = this.getSharedPreferences(Constants.SHARED_PREFS_USERNAME, Context.MODE_PRIVATE);
 		username = prefs.getString(Constants.JSON_USERNAME, "username");
 		TextView welcome = (TextView) findViewById(R.id.welcomeText);
diff --git a/src/group/cs169/cookingbuddy/IngredientActivity.java b/src/group/cs169/cookingbuddy/IngredientActivity.java
index d23e284..14221c0 100644
--- a/src/group/cs169/cookingbuddy/IngredientActivity.java
+++ b/src/group/cs169/cookingbuddy/IngredientActivity.java
@@ -11,13 +11,11 @@ import org.json.JSONObject;
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.app.ProgressDialog;
-import android.app.SearchManager;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
-import android.util.Log;
 import android.util.SparseBooleanArray;
 import android.view.ActionMode;
 import android.view.LayoutInflater;
@@ -30,8 +28,6 @@ import android.widget.AdapterView;
 import android.widget.AdapterView.OnItemLongClickListener;
 import android.widget.EditText;
 import android.widget.ListView;
-import android.widget.SearchView;
-import android.widget.Spinner;
 import android.widget.Toast;
 
 public class IngredientActivity extends BaseActivity implements AsyncResponse {
@@ -45,13 +41,16 @@ public class IngredientActivity extends BaseActivity implements AsyncResponse {
 	IngredientAdapter adapter;
 	Object mActionMode;
 	Ingredient selectedIngredient;
+	//This is set by the datePicker after a user selects a date. 
+	//This is extremely hacky and honestly a bad solution...
+	String latestExpirationDateSelected; 
+	final static Integer ADD_ING = 0;
 
 	@SuppressWarnings("unchecked")
 	@Override
 	protected void onCreate(Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
 		setContentView(R.layout.activity_ingredient);
-		Intent i = getIntent();
 		SharedPreferences prefs = this.getSharedPreferences(Constants.SHARED_PREFS_USERNAME, Context.MODE_PRIVATE);
 		user = prefs.getString(Constants.JSON_USERNAME, "username");
 		ingredientList = (ListView) findViewById(R.id.ingredientList);
@@ -87,7 +86,6 @@ public class IngredientActivity extends BaseActivity implements AsyncResponse {
 				 */
 				int checkedCount = ingredientList.getCheckedItemCount();
 				mode.setTitle(checkedCount + " Selected");
-				Log.d("position passed in:","is"+position);
 				adapter.toggleSelection(position);
 
 			}
@@ -145,11 +143,11 @@ public class IngredientActivity extends BaseActivity implements AsyncResponse {
 		});
 
 	}
-	
+
 	private void selectAll() {
 		//Trying to highlight all ingredients here...
 		for (int i =  0; i < ingredientData.size();i++) {
-			
+
 		}
 	}
 
@@ -183,7 +181,6 @@ public class IngredientActivity extends BaseActivity implements AsyncResponse {
 					long id) {
 				//adapter.resetBooleanArray();
 				selectedIngredient = ingredientData.get(position);
-				Log.d("IngredientActivity","Name: " + selectedIngredient.name);
 				if (mActionMode != null) return false;
 				//mActionMode = act.startActionMode(mActionModeCallback);
 				return true;
@@ -194,16 +191,12 @@ public class IngredientActivity extends BaseActivity implements AsyncResponse {
 	@SuppressWarnings("unchecked")
 	private void deleteItems() {
 		//selectedIngredient = ingredientData.get(position);
-		Log.d("IngredientActivity","Delete Items Clicked");
 		SparseBooleanArray selected = adapter.getSelectedIds();
 		selectedIngredient = null;
 		// Captures all selected ids with a loop
 
 		for (int i = (selected.size() - 1); i >= 0; i--) {
-			Log.d("How many items are selected","i:"+i);
 			if (selected.valueAt(i)) {
-				Log.d("Value at "+i,"Boolean :"+selected.valueAt(i));
-				Log.d("The position of the item","Position :"+selected.keyAt(i));
 				selectedIngredient = (Ingredient) adapter.getItem(selected.keyAt(i));
 				//WorldPopulation selecteditem = listviewadapter.getItem(selected.keyAt(i));
 				// Remove selected items following the ids
@@ -231,31 +224,6 @@ public class IngredientActivity extends BaseActivity implements AsyncResponse {
 
 	}
 
-
-
-	/** Deletes an item from the Ingredient List and updates the database appropriately*/
-	@SuppressWarnings("unchecked")
-	private void deleteItem() {
-		Log.d("IngredientActivity","Delete clicked");
-		if(ingredientData.remove(selectedIngredient)) {
-			adapter.notifyDataSetChanged();	
-		}
-		try {
-			JSONObject param = new JSONObject();
-			param.put(Constants.JSON_USERNAME,user);
-			param.put(Constants.INGREDIENT_NAME,selectedIngredient.name);
-			param.put(Constants.EXPIRATION,selectedIngredient.expDate);
-			ArrayList<Object> container = new ArrayList<Object>();
-			container.add(param);
-			container.add(Constants.REMOVE_INGREDIENT_URL);
-			task = new HTTPTask();
-			task.caller = (AsyncResponse) ctx;
-			task.execute(container);
-
-		} catch (JSONException e) {
-			e.printStackTrace();
-		}
-	}
 	/** Updates an the quantity of an ingredient and updates the database appropriately*/
 	private void updateItem() {
 		//AKHIL: New part added so that we can have multiple items
@@ -263,7 +231,6 @@ public class IngredientActivity extends BaseActivity implements AsyncResponse {
 		selectedIngredient = null;
 		int i = selected.size() - 1;
 		selectedIngredient = (Ingredient) adapter.getItem(selected.keyAt(i));
-		Log.d("IngredientActivity","Update clicked");
 		LayoutInflater li = LayoutInflater.from(this);
 		View ingredientPrompt = li.inflate(R.layout.update_prompt, null);
 		AlertDialog.Builder builder = new AlertDialog.Builder(this);
@@ -302,49 +269,7 @@ public class IngredientActivity extends BaseActivity implements AsyncResponse {
 		AlertDialog alertDialog = builder.create(); 
 		alertDialog.show();
 	}
-	/*
-    private ActionMode.Callback mActionModeCallback = new ActionMode.Callback() {
-
-    	//AKHIL:
-    	//here we will handle the case where the item is selectded
-
-		@Override
-		public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
-			switch (item.getItemId()) {
-				case R.id.cont_delete:
-					deleteItem();
-					mode.finish();
-					return true;
-				case R.id.cont_update:
-					updateItem();
-					mode.finish();
-					return true;
-				default:
-					return false;
-			}
-		}
-
-		@Override
-		public boolean onCreateActionMode(ActionMode mode, Menu menu) {
-			// TODO Auto-generated method stub
-			MenuInflater inflater = mode.getMenuInflater();
-	        inflater.inflate(R.menu.contextual, menu);
-	        return true;
-		}
-
-		@Override
-		public void onDestroyActionMode(ActionMode mode) {
-			mActionMode = null;
-		}
-
-		@Override
-		public boolean onPrepareActionMode(ActionMode mode, Menu menu) {
-			return false;
-		}
-
-    };
-	 */
-
+	
 	@Override
 	public void processFinish(String output, String callingMethod) { 
 		String errCode = Constants.ERROR_CODE;
@@ -355,7 +280,6 @@ public class IngredientActivity extends BaseActivity implements AsyncResponse {
 			e.printStackTrace();
 		}
 		if (callingMethod.equals(Constants.INGREDIENT_LIST_URL)) {
-			Log.d("IngredientActivity","Return from Ingredient Population");
 			populateList(output);
 			return;
 		}
@@ -391,80 +315,53 @@ public class IngredientActivity extends BaseActivity implements AsyncResponse {
 	}
 
 	public void addIngredient(View v) {
-		LayoutInflater li = LayoutInflater.from(this);
-		View ingredientPrompt = li.inflate(R.layout.ingredient_prompt, null);
-		AlertDialog.Builder builder = new AlertDialog.Builder(this);
-		builder.setView(ingredientPrompt);
-		final EditText nameField = (EditText) ingredientPrompt.findViewById(R.id.prompt_name);
-		final Spinner amtField = (Spinner) ingredientPrompt.findViewById(R.id.prompt_amt);
-		final EditText unitField = (EditText) ingredientPrompt.findViewById(R.id.prompt_unit);
-		final EditText expField = (EditText) ingredientPrompt.findViewById(R.id.prompt_exp);
-
-		builder.setCancelable(true);
-		builder.setPositiveButton("Add", new DialogInterface.OnClickListener() {
-
-			@SuppressWarnings("unchecked")
-			@Override
-			public void onClick(DialogInterface dialog, int which) {
-				String ingName = nameField.getText().toString().trim();
-				String amt = String.valueOf(amtField.getSelectedItem());
-				String unit = unitField.getText().toString().trim();
-				String exp = expField.getText().toString().trim();
-				Ingredient tmp = new Ingredient(ingName,Double.parseDouble(amt),unit,exp);
-				ingredientData.add(tmp);
-				adapter.notifyDataSetChanged();
-
-				try {
-					JSONObject param = new JSONObject();
-					param.put(Constants.JSON_USERNAME,user);
-					param.put(Constants.INGREDIENT_NAME,ingName);
-					param.put(Constants.QUANTITY, amt);
-					param.put(Constants.UNIT,unit);
-					param.put(Constants.EXPIRATION,exp);
-					ArrayList<Object> container = new ArrayList<Object>();
-					container.add(param);
-					container.add(Constants.ADD_INGREDIENT_URL);
-					task = new HTTPTask();
-					task.caller = (AsyncResponse) ctx;
-					task.execute(container);
-
-				} catch (JSONException e) {
-					e.printStackTrace();
-				}
-
-			}
-		});
-		AlertDialog alertDialog = builder.create(); 
-		alertDialog.show();
-
-
+		Intent i = new Intent(this, AddIngredientActivity.class);
+		startActivityForResult(i,ADD_ING);
 	}
 
+	@SuppressWarnings("unchecked")
+	@Override
+	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+		if (requestCode == ADD_ING) {
+			if (resultCode == RESULT_CANCELED) return;
+			String name = data.getStringExtra(Constants.INGREDIENT_NAME);
+			String quantity = data.getStringExtra(Constants.QUANTITY);
+			String unit = data.getStringExtra(Constants.UNIT);
+			String expDate = data.getStringExtra(Constants.EXPIRATION);
+			Ingredient tmp = new Ingredient(name,Double.parseDouble(quantity),unit,expDate);
+			ingredientData.add(tmp);
+			adapter.notifyDataSetChanged();
+
+			try {
+				JSONObject param = new JSONObject();
+				param.put(Constants.JSON_USERNAME,user);
+				param.put(Constants.INGREDIENT_NAME,name);
+				param.put(Constants.QUANTITY, quantity);
+				param.put(Constants.UNIT,unit);
+				param.put(Constants.EXPIRATION,expDate);
+				ArrayList<Object> container = new ArrayList<Object>();
+				container.add(param);
+				container.add(Constants.ADD_INGREDIENT_URL);
+				task = new HTTPTask();
+				task.caller = (AsyncResponse) ctx;
+				task.execute(container);
+
+			} catch (JSONException e) {
+				e.printStackTrace();
+			}			
+		}
+	}
+	
 	//this is the remove all view
 	//AKHIL:
+	@SuppressWarnings("unchecked")
 	public void removeAll(View v) {
-		//LayoutInflater li = LayoutInflater.from(this);
-		//View ingredientPrompt = li.inflate(R.layout.ingredient_prompt, null);
-		//AlertDialog.Builder builder = new AlertDialog.Builder(this);
-		//builder.setView(ingredientPrompt);
-		/*
-		final EditText nameField = (EditText) ingredientPrompt.findViewById(R.id.prompt_name);
-		final EditText amtField = (EditText) ingredientPrompt.findViewById(R.id.prompt_amt);
-		final EditText unitField = (EditText) ingredientPrompt.findViewById(R.id.prompt_unit);
-		final EditText expField = (EditText) ingredientPrompt.findViewById(R.id.prompt_exp);
-		 */
 		ingredientData.clear();
 		adapter.notifyDataSetChanged();
 
 		try {
 			JSONObject param = new JSONObject();
 			param.put(Constants.JSON_USERNAME,user);
-			/*
-					param.put(Constants.INGREDIENT_NAME,ingName);
-					param.put(Constants.QUANTITY, amt);
-					param.put(Constants.UNIT,unit);
-					param.put(Constants.EXPIRATION,exp);
-			 */
 			ArrayList<Object> container = new ArrayList<Object>();
 			container.add(param);
 			container.add(Constants.REMOVE_ALL);
@@ -500,4 +397,5 @@ public class IngredientActivity extends BaseActivity implements AsyncResponse {
 			this.amountUnit = amount + " " + unit;
 		}
 	}
+
 }
diff --git a/src/group/cs169/cookingbuddy/IngredientAdapter.java b/src/group/cs169/cookingbuddy/IngredientAdapter.java
index e9dd813..2938549 100644
--- a/src/group/cs169/cookingbuddy/IngredientAdapter.java
+++ b/src/group/cs169/cookingbuddy/IngredientAdapter.java
@@ -1,17 +1,13 @@
 package group.cs169.cookingbuddy;
 
 import group.cs169.cookingbuddy.IngredientActivity.Ingredient;
-import android.util.Log;
 import android.util.SparseBooleanArray;
-
 import java.util.ArrayList;
-
 import android.content.Context;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.BaseAdapter;
-//import android.widget.ImageView;
 import android.widget.TextView;
 
 public class IngredientAdapter extends BaseAdapter {
@@ -63,7 +59,6 @@ public class IngredientAdapter extends BaseAdapter {
 	public void selectView(int position, boolean value) {
         if (value){
             mSelectedItemsIds.put(position, value);
-        	Log.d("Key:"+position,"Value:"+value);
         }
         else {
             mSelectedItemsIds.delete(position);
diff --git a/src/group/cs169/cookingbuddy/MainActivity.java b/src/group/cs169/cookingbuddy/MainActivity.java
index 1a3d28a..6fbdc78 100644
--- a/src/group/cs169/cookingbuddy/MainActivity.java
+++ b/src/group/cs169/cookingbuddy/MainActivity.java
@@ -3,22 +3,16 @@ package group.cs169.cookingbuddy;
 import group.cs169.cookingbuddy.HTTPTask.AsyncResponse;
 
 import java.util.ArrayList;
-
 import org.json.JSONException;
 import org.json.JSONObject;
-
 import android.app.Activity;
 import android.app.ProgressDialog;
-import android.app.SearchManager;
 import android.content.Context;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.os.Bundle;
-import android.view.Menu;
-import android.view.MenuItem;
 import android.view.View;
 import android.widget.EditText;
-import android.widget.SearchView;
 import android.widget.Toast;
 
 public class MainActivity extends Activity implements AsyncResponse {
@@ -38,12 +32,9 @@ public class MainActivity extends Activity implements AsyncResponse {
 		userField = (EditText) findViewById(R.id.userText);
 		passField = (EditText) findViewById(R.id.passwordText);
 		getActionBar().hide();
-		
-		
 	}
 
 	/** Called when the 'Sign Up' button is clicked from Home Screen */
-	@SuppressWarnings("unchecked")
 	public void signUp(View v) {
          Intent i = new Intent(this,SignUpActivity.class);
          startActivity(i);
diff --git a/src/group/cs169/cookingbuddy/Recipe.java b/src/group/cs169/cookingbuddy/Recipe.java
index d925226..6625f56 100644
--- a/src/group/cs169/cookingbuddy/Recipe.java
+++ b/src/group/cs169/cookingbuddy/Recipe.java
@@ -17,6 +17,7 @@ import android.util.Log;
 
 public class Recipe implements AsyncResponse, Serializable {
 	
+	private static final long serialVersionUID = 1L;
 	String name;
 	String imgUrl;
 	transient Bitmap img;
diff --git a/src/group/cs169/cookingbuddy/RecipeInstructionActivity.java b/src/group/cs169/cookingbuddy/RecipeInstructionActivity.java
index 0fd5ea8..5f93d4e 100644
--- a/src/group/cs169/cookingbuddy/RecipeInstructionActivity.java
+++ b/src/group/cs169/cookingbuddy/RecipeInstructionActivity.java
@@ -5,31 +5,22 @@ import group.cs169.cookingbuddy.HTTPTask.AsyncResponse;
 import java.io.InputStream;
 import java.util.ArrayList;
 import java.util.Calendar;
-
 import org.json.JSONException;
 import org.json.JSONObject;
-
-import android.app.Activity;
 import android.app.AlertDialog;
-import android.app.SearchManager;
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
-import android.graphics.drawable.BitmapDrawable;
-import android.graphics.drawable.Drawable;
 import android.os.AsyncTask;
 import android.os.Bundle;
 import android.util.Log;
 import android.view.LayoutInflater;
-import android.view.Menu;
-import android.view.MenuItem;
 import android.view.View;
 import android.widget.ImageView;
 import android.widget.RatingBar;
-import android.widget.SearchView;
 import android.widget.TextView;
 
 public class RecipeInstructionActivity extends BaseActivity implements AsyncResponse {
diff --git a/src/group/cs169/cookingbuddy/SearchResultActivity.java b/src/group/cs169/cookingbuddy/SearchResultActivity.java
index fbdbf2d..6d9a941 100644
--- a/src/group/cs169/cookingbuddy/SearchResultActivity.java
+++ b/src/group/cs169/cookingbuddy/SearchResultActivity.java
@@ -10,20 +10,16 @@ import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import android.app.Activity;
 import android.app.ProgressDialog;
 import android.app.SearchManager;
 import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
-import android.view.Menu;
-import android.view.MenuItem;
 import android.view.View;
 import android.widget.AdapterView;
 import android.widget.AdapterView.OnItemClickListener;
 import android.widget.AdapterView.OnItemSelectedListener;
 import android.widget.ListView;
-import android.widget.SearchView;
 import android.widget.Spinner;
 
 public class SearchResultActivity extends BaseActivity implements AsyncResponse, OnItemSelectedListener {
@@ -122,7 +118,6 @@ public class SearchResultActivity extends BaseActivity implements AsyncResponse,
 		JSONArray names = null;
 		JSONArray images = null;
 		JSONArray ids = null;
-		JSONArray urls = null;
 		listData = new ArrayList<Recipe>();
 		adapter = new SearchAdapter(this,listData);
 		searchResults.setAdapter(adapter);
diff --git a/src/group/cs169/cookingbuddy/SuggestionAdapter.java b/src/group/cs169/cookingbuddy/SuggestionAdapter.java
index 78db4f3..2c0e2ad 100644
--- a/src/group/cs169/cookingbuddy/SuggestionAdapter.java
+++ b/src/group/cs169/cookingbuddy/SuggestionAdapter.java
@@ -47,7 +47,7 @@ public class SuggestionAdapter extends BaseAdapter {
 		}
 		Recipe item = suggestions.get(position);
 		TextView name = (TextView) convertView.findViewById(R.id.recipe_name);
-		ImageView rating = (ImageView) convertView.findViewById(R.id.recipe_rating);
+		//ImageView rating = (ImageView) convertView.findViewById(R.id.recipe_rating);
 		ImageView image = (ImageView) convertView.findViewById(R.id.recipe_image);
 		name.setText(item.name);
 		//rating.setImageResource(item.rating);
