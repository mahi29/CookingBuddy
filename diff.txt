diff --git a/src/group/cs169/cookingbuddy/Constants.java b/src/group/cs169/cookingbuddy/Constants.java
index 044eeb2..cc09ea9 100644
--- a/src/group/cs169/cookingbuddy/Constants.java
+++ b/src/group/cs169/cookingbuddy/Constants.java
@@ -17,6 +17,9 @@ public class Constants {
 	public static final String JSON_USERNAME = "user";
 	public static final String JSON_PASSWORD = "password";
 	public static final String JSON_STANDARD_RESPONSE = "errCode";
+	public static final String SUCCESS = "SUCCESS";
+	public static final int DEFAULT_RATING = 3;
+	public static final int DEFAULT_PICTURE = R.drawable.stockimage;
 	
 	//Ingredient List
 	public static final String INGREDIENT_KEY = "items"; 
@@ -26,7 +29,8 @@ public class Constants {
 	public static final String UNIT = "unit";
 	public static final String NEW_QUANTITY = "new_quantity";
 	
-	//
+	//Search
+	public static final String SEARCH_KEYWORD = "q";
 	
 	
 	
diff --git a/src/group/cs169/cookingbuddy/HTTPTask.java b/src/group/cs169/cookingbuddy/HTTPTask.java
index f2261c0..4a00173 100644
--- a/src/group/cs169/cookingbuddy/HTTPTask.java
+++ b/src/group/cs169/cookingbuddy/HTTPTask.java
@@ -32,7 +32,7 @@ public class HTTPTask extends AsyncTask<ArrayList<Object>, Void, String> {
 		method = path;
 		try {
 			URL url;
-			String address = Constants.BASE_URL+path;
+			String address = Constants.ADD_INGREDIENT_URL+path;
 			url = new URL (address);
 			//Create the connection
 			urlConn = (HttpURLConnection) url.openConnection();
diff --git a/src/group/cs169/cookingbuddy/IngredientActivity.java b/src/group/cs169/cookingbuddy/IngredientActivity.java
index 7edfc95..8f96b36 100644
--- a/src/group/cs169/cookingbuddy/IngredientActivity.java
+++ b/src/group/cs169/cookingbuddy/IngredientActivity.java
@@ -24,7 +24,7 @@ public class IngredientActivity extends Activity implements AsyncResponse {
 		task = new HTTPTask();
 		task.caller = this;
 		Intent i = getIntent();
-		String username = i.getStringExtra("username");
+		String username = i.getStringExtra(Constants.JSON_USERNAME);
 		ingredientList = (ListView) findViewById(R.id.ingredientList);
         ArrayList<Object> container = new ArrayList<Object>();
 		JSONObject param = new JSONObject();
diff --git a/src/group/cs169/cookingbuddy/MainActivity.java b/src/group/cs169/cookingbuddy/MainActivity.java
index 615cc35..6c419f6 100644
--- a/src/group/cs169/cookingbuddy/MainActivity.java
+++ b/src/group/cs169/cookingbuddy/MainActivity.java
@@ -106,8 +106,8 @@ public class MainActivity extends Activity implements AsyncResponse {
 		JSONObject out;
 		try {
 			out = new JSONObject(output);
-			int errCode = Integer.parseInt(out.getString("errCode"));
-			if (errCode == 1) {
+			String errCode = out.getString(Constants.JSON_STANDARD_RESPONSE);
+			if (errCode.equals(Constants.SUCCESS)) {
 				Intent i = new Intent(this, HomeActivity.class);
 				i.putExtra(USERNAME, username);
 				startActivity(i);
@@ -120,20 +120,7 @@ public class MainActivity extends Activity implements AsyncResponse {
 	}
 
 	private void signUpCallback(String output) {
-		JSONObject out;
-		try {
-			out = new JSONObject(output);
-			int errCode = Integer.parseInt(out.getString("errCode"));
-			if (errCode == 1) {
-				Intent i = new Intent(this, HomeActivity.class);
-				i.putExtra(USERNAME, username);
-				startActivity(i);
-			} else {
-				//ERROR SIGNING UP???
-			}
-		} catch (JSONException e) {
-				e.printStackTrace();
-		} 
+
 	}
 	@Override
 	public void processFinish(String output, String callingMethod) {
diff --git a/src/group/cs169/cookingbuddy/Recipe.java b/src/group/cs169/cookingbuddy/Recipe.java
index 45b281a..9529f7f 100644
--- a/src/group/cs169/cookingbuddy/Recipe.java
+++ b/src/group/cs169/cookingbuddy/Recipe.java
@@ -1,16 +1,61 @@
 package group.cs169.cookingbuddy;
 
+import java.io.InputStream;
+
+import android.content.Context;
 import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.os.AsyncTask;
+import android.util.Log;
 
 public class Recipe {
 	String name;
 	Bitmap img;
 	int rating;
-	
-	protected Recipe(String name, Bitmap image, int rating) {
+	Context context;
+	/**
+	 * 
+	 * @param name - Recipe name
+	 * @param imageUrl - URL of the image; can be null
+	 * @param rating - Recipe rating
+	 */
+	public Recipe(String name, String imageUrl, int rating, Context ctx) {
 		this.name = name;
-		this.rating = rating;
-		this.img = image;
+		this.context = ctx;
+		//this.rating = rating;
+		this.rating = R.drawable.rating;
+		if (imageUrl == null || imageUrl.equals("")) {
+			img  = BitmapFactory.decodeResource(context.getResources(), Constants.DEFAULT_PICTURE);
+		} else {
+			DownloadTask task = new DownloadTask(this);
+			task.execute(imageUrl);
+		}
 	}
 	
+	private class DownloadTask extends AsyncTask<String, Void, Bitmap> {
+
+		Recipe recipeInstance;
+		
+		public DownloadTask(Recipe recipe) {
+			this.recipeInstance = recipe;
+		}
+		@Override
+		protected Bitmap doInBackground(String... urls) {
+			String urldisplay = urls[0];
+			Bitmap image = null;
+			try {
+				InputStream in = new java.net.URL(urldisplay).openStream();
+				image = BitmapFactory.decodeStream(in);
+			} catch (Exception e) {
+				Log.e("Error", e.getMessage());
+				e.printStackTrace();
+			}
+			return image;
+		}
+		
+		@Override
+		protected void onPostExecute (Bitmap result) {
+			recipeInstance.img = result;
+		}
+	}
 }
diff --git a/src/group/cs169/cookingbuddy/SearchResultActivity.java b/src/group/cs169/cookingbuddy/SearchResultActivity.java
index f4c4064..a35bb52 100644
--- a/src/group/cs169/cookingbuddy/SearchResultActivity.java
+++ b/src/group/cs169/cookingbuddy/SearchResultActivity.java
@@ -4,6 +4,7 @@ import group.cs169.cookingbuddy.HTTPTask.AsyncResponse;
 
 import java.util.ArrayList;
 
+import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
@@ -22,6 +23,7 @@ public class SearchResultActivity extends Activity implements AsyncResponse {
 	private TextView txtQuery;
 	public HTTPTask task;
 	ListView searchResults;
+	public ArrayList<Recipe> listData;
 	
 	@Override
 	public void onCreate(Bundle savedInstanceState) { 
@@ -50,7 +52,7 @@ public class SearchResultActivity extends Activity implements AsyncResponse {
             ArrayList<Object> container = new ArrayList<Object>();
             JSONObject param = new JSONObject();
             try {
-				param.put("q", query);
+				param.put(Constants.SEARCH_KEYWORD, query);
 			} catch (JSONException e) {
 				e.printStackTrace();
 			}
@@ -66,7 +68,26 @@ public class SearchResultActivity extends Activity implements AsyncResponse {
 	public void processFinish(String output, String callingMethod) {
 		//Handle displaying of search results here
 		//TODO: Replace with objects from the back-end
-		final ArrayList<Recipe> data = null; 
+		JSONObject result;
+		JSONArray names = null;
+		JSONArray images = null;
+		listData = new ArrayList<Recipe>();
+		
+		try {
+			result = new JSONObject(output);
+			names = result.getJSONArray("recipe_name");
+			images = result.getJSONArray("smallImageUrls");
+			for (int i = 0; i < names.length(); i++) {
+				String name = names.getString(i);
+				JSONArray imageArray = images.getJSONArray(i);
+				String image = imageArray.getString(0);
+				Recipe temp = new Recipe(name, image, Constants.DEFAULT_RATING, this);
+				listData.add(temp);
+			}
+		} catch (JSONException e) {
+			e.printStackTrace();
+		}	
+		final ArrayList<Recipe> data = listData;
 		SearchAdapter adapter = new SearchAdapter(this,data);
 		searchResults.setAdapter(adapter);
 		searchResults.setOnItemClickListener(new OnItemClickListener() {
@@ -80,6 +101,4 @@ public class SearchResultActivity extends Activity implements AsyncResponse {
 			
 		});
 	}
-
-
 }
